apiVersion: apps/v1
kind: Deployment
metadata: 
  name: accounts-service-dp
  labels:
    app: accounts-service
  namespace: staging-ns
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: accounts-service
  template:
    metadata:
      labels:
        app: accounts-service
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z accounts-service-db-srv 3306; do echo waiting for db; sleep 2; done']
      containers:
        - name: accounts-service
          image: docker.io/rvanappeldorn/accounts-service-fast-api:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DB_USER
              valueFrom:
                secretKeyRef: { name: accounts-db-credentials, key: user }
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef: { name: accounts-db-credentials, key: password }
            - name: DATABASE_URL
              value: mariadb+pymysql://$(DB_USER):$(DB_PASSWORD)@accounts-service-db-srv.$(POD_NAMESPACE).svc.cluster.local:3306/accounts?charset=utf8mb4
            - name: SMTP_PORT
              value: "1025"
            - name: SMTP_HOST
              value: mailhog-srv.dev-tools.svc.cluster.local
            - name: FROM_MAIL
              value: no-reply@example.com
            - name: BASE_URL
              value: http://staging.booking-app.com
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef: { name: accounts-service-secrets, key: jwt_secret_key }
          ports:
            - containerPort: 8000
